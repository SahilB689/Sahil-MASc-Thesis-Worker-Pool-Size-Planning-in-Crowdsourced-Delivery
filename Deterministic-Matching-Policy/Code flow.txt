(Algorithm_VFA_RandomData)

Initiation:
# Read data + initiate values
# Initiate VF

Run Algorithm (def iterate(N))
# 1: Initiate driver/demand attribute vectors + define classes for each
# 2: Iterate, while n<N
	# 2.1: create sample_path()
	# 2.2: update no. of drivers/demand
	# 2.3: solve optimization problem
		# 2.3.1: setup_model (compute feasible matches + read VF for each match) 
		# 2.3.2: solve_get_values(solve opt + get dual values)
	# 2.4: Update attribute (update driver/demand attr after matching)
	# 2.5: Update value function
	# 2.6: Compute pre-decision state


-----

(Algorithm_VFA_aggregation_RandomData)

Initiation:
# Read data + initiate values
# Initiate VF

Run Algorithm (def iterate(N))
# 1: Initiate driver/demand attribute vectors + define classes for each
# 2: Iterate, while n<N
	# 2.1: create sample_path()
	# 2.2: update no. of drivers/demand
	# 2.3: solve optimization problem
		# 2.3.1: setup_model (compute feasible matches + read VF for each match) 
			# 2.3.2: compute_weights (inverse of variance)
		# 2.3.2: solve_get_values(solve opt + get dual values)
	# 2.4: Update attribute (update driver/demand attr after matching)
	# 2.5: Update value function 
		# 2.5.1: Compute variance
	# 2.6: Compute pre-decision state